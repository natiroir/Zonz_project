static uint8_t global_turns = 0;  // ðŸ”¹ Compteur global des tours rÃ©els
static uint8_t calls_per_turn = 0; // ðŸ”¹ Compte le nombre d'appels de actions_do() dans un tour
static uint8_t bombe_retard = 0;   // ðŸ”¹ Bombe en attente d'explosion
static uint8_t bombe_tour_lancement = 0; // ðŸ”¹ Tour oÃ¹ la bombe est placÃ©e

void actions_do(t_player *p_player, enum action act_id)
{
    static uint8_t declenche_bombe = 0;

    calls_per_turn++;  // âœ… On incrÃ©mente Ã  chaque appel de actions_do()

    // ðŸ”¹ Si on a appelÃ© 4 fois actions_do(), c'est un nouveau tour rÃ©el
    if (calls_per_turn == 4)
    {
        global_turns++;  // âœ… IncrÃ©mentation du tour rÃ©el
        calls_per_turn = 0;  // âœ… RÃ©initialisation du compteur d'appels
    }

    switch (act_id)
    {
        case ACTION_BOMB:
            bombe_retard = 1;  
            bombe_tour_lancement = global_turns;  // âœ… Enregistre le tour rÃ©el oÃ¹ la bombe est posÃ©e
            printf("ðŸ’£ Bombe posÃ©e au tour %d !\n", global_turns);
            break;
    }

    // ðŸ”¹ Gestion du dÃ©clenchement de la bombe
    if (bombe_retard == 1 && (global_turns - bombe_tour_lancement) >= 5)  // âœ… Explosion exactement 5 tours aprÃ¨s la pose
    {
        declenche_bombe = 1;
        bombe_retard = 0;  // RÃ©initialisation

        printf("ðŸ’¥ BOOM ! La bombe explose au tour %d !\n", global_turns);
    }
}
