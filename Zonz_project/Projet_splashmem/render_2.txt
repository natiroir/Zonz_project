#include <SDL2/SDL.h>
#include <SDL2/SDL_opengl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <dlfcn.h>  // Pour dlopen() et dlsym()

#include "actions.h"
#include "param.h"
#include "splash.h"
#include "world.h"

// Déclaration des pointeurs de fonction
char (*get_action1)();
char (*get_action2)();
char (*get_action3)();
char (*get_action4)();

void* handle1 = NULL;
void* handle2 = NULL;
void* handle3 = NULL;
void* handle4 = NULL;

void load_libraries();
void close_libraries();  // Ajout de cette fonction

void main_loop()
{
    uint32_t nb = 0;
    char action_result_1, action_result_2, action_result_3, action_result_4;

    // Chargement des bibliothèques et des fonctions
    load_libraries();

    while (!quitting)
    {
        SDL_Event event;
        while (SDL_PollEvent(&event))
        {
            if (event.type == SDL_QUIT)
            {
                quitting = 1;
            }
        }

        // Vérification avant d’appeler les fonctions
        if (get_action1) {
            action_result_1 = get_action1();
            actions_do(players[0], action_result_1);
        }
        if (get_action2) {
            action_result_2 = get_action2();
            actions_do(players[1], action_result_2);
        }
        if (get_action3) {
            action_result_3 = get_action3();
            actions_do(players[2], action_result_3);
        }
        if (get_action4) {
            action_result_4 = get_action4();
            actions_do(players[3], action_result_4);
        }

        // Affichage et mise à jour
        render_map();
        nb++;
        SDL_Delay(100);
    }

    // Fermer les bibliothèques après utilisation
    close_libraries();
}

// Fonction pour charger les bibliothèques
void load_libraries() 
{
    char *error;

    handle1 = dlopen("players/player1.so", RTLD_LAZY);
    handle2 = dlopen("players/player2.so", RTLD_LAZY);
    handle3 = dlopen("players/player3.so", RTLD_LAZY);
    handle4 = dlopen("players/player4.so", RTLD_LAZY);

    if (!handle1 || !handle2 || !handle3 || !handle4) {
        fprintf(stderr, "Erreur lors du chargement des bibliothèques : %s\n", dlerror());
        close_libraries();
        exit(EXIT_FAILURE);
    }

    // Récupération des fonctions
    get_action1 = (char (*)()) dlsym(handle1, "get_action_1");
    if ((error = dlerror()) != NULL) {
        fprintf(stderr, "Erreur dlsym (get_action_1) : %s\n", error);
        close_libraries();
        exit(EXIT_FAILURE);
    }

    get_action2 = (char (*)()) dlsym(handle2, "get_action_2");
    if ((error = dlerror()) != NULL) {
        fprintf(stderr, "Erreur dlsym (get_action_2) : %s\n", error);
        close_libraries();
        exit(EXIT_FAILURE);
    }

    get_action3 = (char (*)()) dlsym(handle3, "get_action_3");
    if ((error = dlerror()) != NULL) {
        fprintf(stderr, "Erreur dlsym (get_action_3) : %s\n", error);
        close_libraries();
        exit(EXIT_FAILURE);
    }

    get_action4 = (char (*)()) dlsym(handle4, "get_action_4");
    if ((error = dlerror()) != NULL) {
        fprintf(stderr, "Erreur dlsym (get_action_4) : %s\n", error);
        close_libraries();
        exit(EXIT_FAILURE);
    }
}

// Fonction pour fermer les bibliothèques
void close_libraries() {
    if (handle1) dlclose(handle1);
    if (handle2) dlclose(handle2);
    if (handle3) dlclose(handle3);
    if (handle4) dlclose(handle4);
}
